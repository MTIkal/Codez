#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET    -1  // No reset pin used
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Animation timing
unsigned long previousMillis = 0;
const long interval = 50;  // Update interval (ms)

// Lissajous parameters
float phase = 0.0;  // Phase shift that will animate the curve

void setup() {
  Serial.begin(115200);
  
  // Initialize OLED display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println("OLED initialization failed!");
    while(true);  // Halt if initialization fails
  }
  display.clearDisplay();
  display.display();
}

void loop() {
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    
    // Increment phase for continuous animation
    phase += 0.1;
    
    // Clear display for new frame
    display.clearDisplay();
    
    // Center of the screen
    int centerX = SCREEN_WIDTH / 2;
    int centerY = SCREEN_HEIGHT / 2;
    
    // Amplitudes (how far the curve extends)
    float A = (SCREEN_WIDTH / 2) - 5;
    float B = (SCREEN_HEIGHT / 2) - 5;
    
    // Frequency parameters for x and y directions
    float a = 3;  // Frequency for x-component
    float b = 2;  // Frequency for y-component
    
    // Draw the Lissajous curve by plotting many points along t from 0 to TWO_PI
    for (float t = 0; t < TWO_PI; t += 0.05) {
      int x = centerX + A * sin(a * t + phase);  // x = A*sin(a*t+phase)
      int y = centerY + B * sin(b * t);            // y = B*sin(b*t)
      display.drawPixel(x, y, SSD1306_WHITE);
    }
    
    // Optionally, draw a small circle at the center for reference
    display.drawCircle(centerX, centerY, 2, SSD1306_WHITE);
    
    // Refresh the display with the new frame
    display.display();
  }
}